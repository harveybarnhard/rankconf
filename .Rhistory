var(df[grp==1]$y2)
var(df[grp==1]$y1)
var(df[grp==2]$y1)
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000)
y2 = x + rnorm(10000)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(paste0(cols, "_var")) := lapply(.SD, function(x) sqrt(mean(x^2))), by=grp, .SDcols=cols]
df
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000)
y2 = x + rnorm(10000)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(paste0(cols, "_var")) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000)
y2 = x + rnorm(10000)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df
?cross
?tcrossproduct
?crossprod
df[,tcrossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000)
y2 = x + rnorm(10000)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,tcrossprod(y1, y2), by=grp]
crossprod(df[grp==1]$y1, df[grp==1]$y2)
tcrossprod(df[grp==1]$y1, df[grp==1]$y2)
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 2)
y2 = x + rnorm(10000, 0, 2)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 10)
y2 = x + rnorm(10000, 0, 10)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
# Collapse to group level
df[,list(corr = crossprod(y1, y2)), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center and standardize
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
df[, c(cols) := lapply(.SD, function(x) x/sqrt(sum(x^2))), by=grp, .SDcols=cols]
# Collapse to group level
df[,list(corr = crossprod(y1, y2)), by=grp]
# Collapse to group level
df[,list(crossprod(y1, y2)), by=grp]
# Collapse to group level
df[,list(sum(y1, y2)), by=grp]
# Collapse to group level
df[,list(crossprod(y1, y2)), by=grp]
crossprod(df$y1, df$y2)
# Collapse to group level
df[,crossprod(y1, y2), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
grp = rep(1:10, each=1000)
x = rep(1:100, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
truth = var(x[1:100])/var(df$x)
truth
?rnorm
50^2
(50^2/1000)
df[grp==1]
var(df[grp==1]$x)
truth = var(df[grp==1]$x)/(var(df[grp==1]$x) + (50^2/1000))
truth
x = rnorm(100)
x = x/var(x)
var(x)
var(x)
x = rnorm(100)
x = x/var(x)
x
var(x)
sd(x)
x = rnorm(100)
x = (x - mean(x))/var(x)
x
var(x)
mean(x)
sd(x)
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
var(x)
sd(d)
sd(x)
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
x = rep(x, times=100)
y1 = x + rnorm(10000, 0, 50)
y2 = x + rnorm(10000, 0, 50)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
truth = 1/(1 + (50^2/1000))
truth
df
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
x = rep(x, times=100)
y1 = x + rnorm(10000, 0, 5)
y2 = x + rnorm(10000, 0, 5)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
df
truth
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
x = rep(x, times=100)
y1 = x + rnorm(10000, 0, 1)
y2 = x + rnorm(10000, 0, 1)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
truth = 1/(1 + (1/1000))
truth
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
x = rep(x, times=100)
y1 = x + rnorm(10000, 0, 2)
y2 = x + rnorm(10000, 0, 2)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Center all variables
cols = c("y1", "y2", "y")
df[, c(cols) := lapply(.SD, function(x) x - mean(x)), by=grp, .SDcols=cols]
# Collapse to group level
df[,crossprod(y1, y2)/crossprod(y, y), by=grp]
truth = 1/(1 + (2^2/1000))
truth
var(df[grp==1]$x)
var(df[grp==1]$y1)
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
x = rep(x, times=100)
y1 = x + rnorm(10000, 0, 2)
y2 = x + rnorm(10000, 0, 2)
y  = (y1 + y2)/2
var(df[grp==1]$y1)
sqrt(2)
var(df[grp==1]$x)
var(df[grp==1]$y)
crossprod(y, y)
crossprod(y -mean(y), y -mean(y))
crossprod(y[grp==1] -mean(y[grp==1]), y[grp==1] -mean(y[grp==1]))
crossprod(y1[grp==1] -mean(y1[grp==1]), y2[grp==1] -mean(y2[grp==1]))
grp = rep(1:10, each=1000)
x = rnorm(100)
x = (x - mean(x))/sd(x)
x = rep(x, times=100)
y1 = x + rnorm(10000, 0, 2)
y2 = x + rnorm(10000, 0, 2)
y  = (y1 + y2)/2
df = data.table(grp, x, y1, y2, y)
df = df[, list(y1=mean(y1), y2=mean(y2), y=mean(y)), by=c("grp", "x")]
# Collapse to group level
df[,.(rel=crossprod(y1, y2)/crossprod(y, y)), by=grp]
crossprod(df$y1, df$y2)
c(crossprod(df$y1, df$y2))
as.vector(crossprod(df$y1, df$y2))
?mean
?weighted.mean
?smooth.spline
?mgcv
library(mgcv)
?mgcv
?gam
mtcars
gam(mpg ~wt, data=mtcars)
gam(cyl ~wt, data=mtcars, family=binomial(link="log"))
setDT(mtcars)
mtcars[, newcyl = cyl/10]
mtcars[, newcyl := cyl/10]
gam(newcyl ~ wt, data=mtcars, family=binomial(link="log"))
mtcars[, newcyl := cyl/24]
gam(newcyl ~ wt, data=mtcars, family=binomial(link="log"), w=24)
gam(newcyl ~ wt, data=mtcars, family=binomial(link="log"), weights=24)
mtcars[, w := 24]
gam(newcyl ~ wt, data=mtcars, family=binomial(link="log"), weights=w)
fit = gam(newcyl ~ wt, data=mtcars, family=binomial(link="log"), weights=w)
plot(fit)
fit$linear.predictors
plot(fit$fitted.values)
plot(mtcars$wt,fit$fitted.values)
plot(mtcars$wt, mtcars$mpg)
lines(mtcars$wt, fit$fitted.values)
line(mtcars$wt, fit$fitted.values)
points(mtcars$wt, fit$fitted.values)
points(mtcars$wt, exp(fit$fitted.values)
)
plot(fit$fitted.values)
plot(fit$coefficients)
fit
summary(fit)
plot(fit$linear.predictors)
plot(fit$model)
fit$model
plot(fit$model$wt, fit$model$newcyl)
lines(fit)
line(fit)
lines(fit$model$wt, fit$fitted.values)
points(fit$model$wt, fit$fitted.values)
plot(fit$model$wt, fit$model$newcyl, col="grey")
points(fit$model$wt, fit$fitted.values, col="black", cex=0.8)
predict.gam(fit, newdata=seq(0,1, 100))
seq(0,1,100)
?seq
seq(0,1,length.out=100)
predict.gam(fit, newdata=seq(0,1, length.out=100))
predict.gam(fit, newdata=data.table(wt=seq(0,1, length.out=100)))
?gam
vis.gam(fit)
cols = colnames(mtcars)
cols[2]
data.frame(cols[2] = c(1,2,3))
data.frame(eval(cols[2]) = c(1,2,3))
data.frame(get(cols[2]) = c(1,2,3))
data.table(get(cols[2]) = c(1,2,3))
data.table(c(1,2,3))
?setnames
?gam
?gam.predict
?predict.gam
?predict_gam()
?gam
fit = gam(newcyl ~ wt, data=mtcars, family=binomial(link="log"), weights=w)
plot(fit$fitted.values, predict.gam(fit))
plot(fit$fitted.values, exp(predict.gam(fit))
plot(fit$fitted.values, exp(predict.gam(fit))
plot(fit$fitted.values, predict.gam(fit)
)
plot(fit$fitted.values, log(predict.gam(fit))
)
plot(exp(fit$fitted.values), predict.gam(fit))
plot(log(fit$fitted.values), predict.gam(fit))
plot(fit$model$wt, fit$model$newcyl)
points(fit$model$wt, fit$fitted.values, col="red")
points(fit$model$wt, predict.gam(fit), col="blue")
points(fit$model$wt, predict.gam(fit, type="response"), col="blue")
?gam
?gamm
install.packages("Rfast")
install.packages("kit")
library(rankconf)
?RcppRoll
install.packages("Rcpp")
library(rankconf)
library(rankconf)
kmax(c(1,2,3), 2)
library(rankconf)
